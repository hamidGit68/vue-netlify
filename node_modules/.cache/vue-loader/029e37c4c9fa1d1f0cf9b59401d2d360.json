{"remainingRequest":"F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\src\\components\\cardInfo.vue?vue&type=template&id=4444f8ee&scoped=true&","dependencies":[{"path":"F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\src\\components\\cardInfo.vue","mtime":1618317164651},{"path":"F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\web-files\\codes\\websites\\bookyar\\vue-bookyar\\bookyar-site\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}